1.	Using the Employee class from GenericsAndSets “common” package, create the necessary equals(), hashCode(), toString() methods. Use “ssn” as the rule for equality. Remember, Netbeans can generate these for you automatically.
2.	Create a List without using Generics and add four Employee objects (from #1 above) to the list. Make sure that two of the Employee objects have duplicate property values (all, including ssn). Retrieve and display the size of the list. It should be equal to 4 (no duplicates removed). Next, retrieve the 2nd item in the list and store it in an Employee variable. Verify that a cast is necessary. Now output the toString() value of the variable to the console and verify that the information output is correct. Now create an old style for loop with counter variable and output all items to the console. Finally, experiment with at least two other operations on a List, not including “add” and “get”.
3.	Make a copy of the code you created in step #2 above and modify it so that this time you are using Generics. Verify that no cast is required and that the output is the same. And this time use the new style for loop that does not use a counter. Verify that the output works for all items in the list.
4.	Now take the list you used in step 3 and use a Set to remove the duplicates based on your implementation of the equals method for the Employee class. Store the result back in the list. Verify that the revised List now has only 3 elements.
5.	Next, take the same four Employee objects used above, but this time add them to a HashMap. What key will you use? How will you retrieve individual items? What happens when you use a duplicate key? Use put(key, value) to add items; use get(key) to retrieve items. Demonstrate a solution. How will you loop through the keys or values? Demonstrate doing both of thes. 
6.	Store the same four Employee objects in a TreeMap. Demonstrate that sorting works. First, make sure you override compareTo() from the Comparable interface. Now try using a Comparator from the GenericsAndMaps project (remember you’ll need a utility class).
7.	Store the same four Employee objects in a TreeSet. Demonstrate that sorting works AND that duplicates are removed by looping through the set using an iterator. Use both the natural ordering and an alternative ordering.
